Token: 27, Lexema: \ Este √© um exemplo completo da linguagem PREX. Ele cobre todas as possibilidades. \
Token: 1, Lexema: PROGRAMA
Token: 2, Lexema: PREX
Token: 3, Lexema: {
Token: 27, Lexema: \ Declara√ß√£o de constantes \
Token: 12, Lexema: CONST
Token: 8, Lexema: FLOAT
Token: 20, Lexema: pi
Token: 7, Lexema: =
Token: 21, Lexema: 3,14
Token: 5, Lexema: ;
Token: 27, Lexema: \ Declara√ß√£o de vari√°veis \
Token: 8, Lexema: FLOAT
Token: 20, Lexema: x
Token: 6, Lexema: ,
Token: 20, Lexema: y
Token: 6, Lexema: ,
Token: 20, Lexema: resultado
Token: 5, Lexema: ;
Token: 9, Lexema: CHAR
Token: 20, Lexema: letra
Token: 5, Lexema: ;
Token: 11, Lexema: BOOL
Token: 20, Lexema: condicao
Token: 5, Lexema: ;
Token: 10, Lexema: LISTA
Token: 8, Lexema: FLOAT
Token: 20, Lexema: numeros
Token: 28, Lexema: (
Erro l√©xico: caractere n√£o reconhecido '5'
Token: 29, Lexema: )
Token: 5, Lexema: ;
Token: 27, Lexema: \ Atribui√ß√µes \
Token: 20, Lexema: x
Token: 7, Lexema: =
Token: 21, Lexema: 10,5
Token: 5, Lexema: ;
Token: 20, Lexema: y
Token: 7, Lexema: =
Token: 21, Lexema: -2,3
Token: 5, Lexema: ;
Token: 20, Lexema: letra
Token: 7, Lexema: =
Token: 22, Lexema: 'A'
Token: 5, Lexema: ;
Token: 20, Lexema: condicao
Token: 7, Lexema: =
Erro l√©xico: caractere n√£o reconhecido '1'
Token: 5, Lexema: ;
Token: 20, Lexema: numeros
Token: 7, Lexema: =
Token: 24, Lexema: +
Token: 21, Lexema: 1,0
Token: 21, Lexema: 2,0
Token: 21, Lexema: 3,0
Token: 21, Lexema: 4,0
Token: 21, Lexema: 5,0
Token: 5, Lexema: ;
Token: 27, Lexema: \ Opera√ß√µes aritm√©ticas \
Token: 20, Lexema: resultado
Token: 7, Lexema: =
Token: 24, Lexema: +
Token: 20, Lexema: x
Token: 20, Lexema: y
Token: 5, Lexema: ;
Token: 20, Lexema: resultado
Token: 7, Lexema: =
Token: 24, Lexema: -
Token: 20, Lexema: x
Token: 20, Lexema: y
Token: 5, Lexema: ;
Token: 20, Lexema: resultado
Token: 7, Lexema: =
Token: 24, Lexema: *
Token: 20, Lexema: x
Token: 20, Lexema: y
Token: 5, Lexema: ;
Token: 20, Lexema: resultado
Token: 7, Lexema: =
Token: 24, Lexema: /
Token: 20, Lexema: x
Token: 20, Lexema: y
Token: 5, Lexema: ;
Token: 27, Lexema: \ Opera√ß√µes l√≥gicas \
Token: 20, Lexema: condicao
Token: 7, Lexema: =
Token: 25, Lexema: ^
Erro l√©xico: caractere n√£o reconhecido '1'
Erro l√©xico: caractere n√£o reconhecido '0'
Token: 5, Lexema: ;
Token: 20, Lexema: condicao
Token: 7, Lexema: =
Token: 25, Lexema: |
Erro l√©xico: caractere n√£o reconhecido '0'
Erro l√©xico: caractere n√£o reconhecido '1'
Erro l√©xico: caractere n√£o reconhecido '1'
Token: 5, Lexema: ;
Token: 20, Lexema: condicao
Token: 7, Lexema: =
Token: 25, Lexema: ~
Erro l√©xico: caractere n√£o reconhecido '0'
Token: 5, Lexema: ;
Token: 27, Lexema: \ Opera√ß√µes relacionais \
Token: 20, Lexema: condicao
Token: 7, Lexema: =
Token: 26, Lexema: >
Token: 20, Lexema: x
Token: 20, Lexema: y
Token: 5, Lexema: ;
Token: 20, Lexema: condicao
Token: 7, Lexema: =
Token: 26, Lexema: <
Token: 20, Lexema: x
Token: 20, Lexema: y
Token: 5, Lexema: ;
Token: 20, Lexema: condicao
Token: 7, Lexema: =
Token: 26, Lexema: ==
Token: 20, Lexema: x
Token: 20, Lexema: y
Token: 5, Lexema: ;
Token: 20, Lexema: condicao
Token: 7, Lexema: =
Token: 26, Lexema: ~=
Token: 20, Lexema: x
Token: 20, Lexema: y
Token: 5, Lexema: ;
Token: 27, Lexema: \ Entrada e sa√≠da \
Token: 19, Lexema: ESCREVER
Token: 23, Lexema: "Digite um n√∫mero: "
Token: 5, Lexema: ;
Token: 18, Lexema: LER
Token: 20, Lexema: x
Token: 5, Lexema: ;
Token: 19, Lexema: ESCREVER
Token: 23, Lexema: "O valor de x √©: "
Token: 6, Lexema: ,
Token: 20, Lexema: x
Token: 5, Lexema: ;
Token: 27, Lexema: \ Controle condicional \
Token: 13, Lexema: SE
Token: 20, Lexema: condicao
Token: 14, Lexema: ENTAO
Token: 3, Lexema: {
Token: 19, Lexema: ESCREVER
Token: 23, Lexema: "Condi√ß√£o verdadeira!"
Token: 5, Lexema: ;
Token: 4, Lexema: }
Token: 15, Lexema: SENAO
Token: 3, Lexema: {
Token: 19, Lexema: ESCREVER
Token: 23, Lexema: "Condi√ß√£o falsa!"
Token: 5, Lexema: ;
Token: 4, Lexema: }
Token: 27, Lexema: \ Loop \
Token: 16, Lexema: ENQUANTO
Token: 26, Lexema: >
Token: 20, Lexema: x
Erro l√©xico: caractere n√£o reconhecido '0'
Token: 20, Lexema: FA
Erro l√©xico: caractere n√£o reconhecido '√'
Erro l√©xico: caractere n√£o reconhecido 'á'
Token: 20, Lexema: A
Token: 3, Lexema: {
Token: 19, Lexema: ESCREVER
Token: 20, Lexema: x
Token: 5, Lexema: ;
Token: 20, Lexema: x
Token: 7, Lexema: =
Token: 24, Lexema: -
Token: 20, Lexema: x
Token: 21, Lexema: 1,0
Token: 5, Lexema: ;
Token: 4, Lexema: }
Token: 27, Lexema: \ Coment√°rio no final do programa \
Token: 27, Lexema: \ Fim do programa \
Token: 4, Lexema: }
